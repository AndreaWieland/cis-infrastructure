
- hosts: dell-r620-1
  name: Specialize networking configuration.
  tags:
    - temp
  tasks:
    - name: Add public addressing. 
      become: yes
      notify: netplan apply
      blockinfile:
        create: yes
        path: /etc/netplan/99-static.yaml
        block: | 
          network:
            ethernets:
              cisnet:
                gateway4: 207.62.187.225
            bridges:
              external:
                accept-ra: yes
                addresses:
                  - 207.62.187.250/27
                  - 207.62.187.251/27
                  - 2607:F380:80F:FFFE::250/64
                  - 2607:F380:80F:FFFE::251/64
                gateway4: 207.62.187.225
                routes:
                  - to: 172.30.1.0/24
                    via: 172.30.5.1
                    metric: 100
                  - to: 172.30.2.0/24
                    via: 172.30.5.1
                    metric: 100
                  - to: 172.20.0.0/16
                    via: 172.30.5.1
                    metric: 100
              legacy:
                accept-ra: yes
                addresses:
                  - 172.30.5.201/24
                  - 172.30.5.202/24
                  - 2607:F380:80F:F425::201/64
                  - 2607:F380:80F:F425::202/64
  handlers:
    - name: netplan apply 
      become: yes
      shell: netplan apply 




- hosts: dell-r620-1
  name: Create Opus container
  become: true
  tasks:
    - name: Check for the default storage pool.
      shell: lxc storage list | grep -q default
      register: ssd_exists 
      ignore_errors: True 
      changed_when: False 

    - name: Add the default storage pool
      shell:
        cmd: lxc storage create default lvm source=vg-ssd lvm.thinpool_name=lxd-ssd-thinpool lvm.use_thinpool=true
      when: ssd_exists.rc == 1 

    - name: Create opus netplan configuration directory.
      become: yes
      file:
        path: /data/config/opus/netplan
        state: directory
        mode: '0755'
    - name: Create opus network configuration.
      become: yes
      blockinfile:
        create: yes
        path: /data/config/opus/netplan/99-static.yaml
        block: | 
          network:
            ethernets:
              eth0:
                addresses:
                  - 207.62.187.226/27
                  - 2607:F380:80F:FFFE::226/64
                gateway4: 207.62.187.225
                routes:
                  - to: 172.30.1.0/24
                    via: 172.30.5.1
                    metric: 100 
                  - to: 172.30.2.0/24
                    via: 172.30.5.1
                    metric: 100 
                  - to: 172.20.0.0/16
                    via: 172.30.5.1
                    metric: 100 
                  - to: 192.168.0.0/24
                    via: 172.30.5.1
                    metric: 100

              eth1:
                addresses:
                  - 172.30.5.2/24
                  - 2607:F380:80F:F425::2/64
                nameservers:
                  search: [cis.cabrillo.edu]
                  addresses: [172.30.5.101, 172.30.5.102]

    - name: Check for the opus profile.
      shell: lxc profile list | grep -q opus 
      register: opus_profile_exists 
      ignore_errors: True 
      changed_when: False 

    - name: Create opus profile
      shell: 
        cmd: |
          lxc profile create opus
          lxc profile device add opus root disk pool=default path=/
          lxc profile device add opus homes disk source=/data/homes path=/home
          lxc profile device add opus netplan disk source=/data/config/opus/netplan path=/etc/netplan
          lxc profile device add opus eth0 nic name=eth0 nictype=bridged parent=external
          lxc profile device add opus eth1 nic name=eth1 nictype=bridged parent=legacy
      when: opus_profile_exists.rc == 1 

    - name: Check if opus exists.
      shell: lxc list | grep -q opus 
      register: opus_exists 
      ignore_errors: True 
      changed_when: False 

    - name: Create opus 
      shell:
        cmd: | 
          lxc launch ubuntu:18.04 opus -p opus -c security.nesting=true
      when: opus_exists.rc == 1

- hosts: dell-r620-1
  tags:
    - kube
  name: Configure Kubernetes. 
  tasks:

    - name: Install microk8s by snap
      become: yes
      snap:
        classic: yes
        name:
          - microk8s

    - name: Add the user ubuntu to microk8s
      become: yes
      user:
        name: ubuntu
        groups: microk8s
        append: yes
 
    - name: Check if microk8s is running.
      shell: /snap/bin/microk8s status | grep -q "is not running" 
      register: microk8s_running
      ignore_errors: True 
      changed_when: False 
      
    - name: Start microk8s
      shell: /snap/bin/microk8s start 
      when: microk8s_running.rc == 0
    
    - name: Enable helm3 package manager.
      shell: |
        /snap/bin/microk8s status | grep -q "helm3: disabled" 
      register: microk8s_helm3
      ignore_errors: True 
      changed_when: False 
      
    - name: Enable Helm v3
      shell: /snap/bin/microk8s enable helm3 
      when: microk8s_helm3.rc == 0
    
    - name: Enable the registry.
      shell: |
        /snap/bin/microk8s status | grep -q "registry: disabled" 
      register: microk8s_registry
      ignore_errors: True 
      changed_when: False 
      
    - name: Enable the registry
      shell: /snap/bin/microk8s enable registry
      when: microk8s_registry.rc == 0

    - name: Allow traffic from micro8s cni0 interface
      become: yes
      ufw:
        rule: allow
        interface: cni0
        direction: in
     
    - name: Allow traffic from micro8s cni0 interface
      become: yes
      ufw:
        rule: allow
        interface: cni0
        direction: out

    - name: Allow traffic to the Kubernetes API server
      become: yes
      ufw:
        rule: allow
        port: 16443
        proto: tcp
  
    - name: Allow forwarding
      become: yes
      ufw:
        rule: allow
        route: yes
