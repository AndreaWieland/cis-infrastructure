#
# Deploy jupyterhub 
#
- name: Install JupyterHub on jupyter.cis.cabrillo.edu
  hosts: jupyter
  tags:
    - jupyter
  become: true
  roles:
    - admins
  tasks: 
    - name: Remove old node package and nginx
      apt:
        pkg:
          - nodejs
          - nginx
        state: absent

    - name: Add caddy repository. 
      apt_repository:
        repo: deb [trusted=yes] https://apt.fury.io/caddy/ / 
        state: present
        filename: caddy

    - name: Install caddy
      apt:
        update-cache: yes
        pkg:
        - caddy

    - name: Configure caddy 
      copy:
        content: |
          jupyter.cis.cabrillo.edu

          reverse_proxy 127.0.0.1:8000
        dest: /etc/caddy/Caddyfile

    - name: Reload caddy
      service:
        name: caddy
        state: reloaded

    - name: Install packages. 
      apt:
        update_cache: yes
        pkg:
          - python3-pip
          - python3-venv
          - nginx
          - docker.io
          - npm

    - name: Install newer node by snap
      snap:
        name: node
        channel: 14/stable
        classic: yes
        
- name: Install and configure the Python environment.
  hosts: jupyter
  become: yes
  tags:
    - jupyter-venv
  tasks: 

    - name: Create the virtualenv directory
      file:
        path: /opt/jupyterhub
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
  
    - name: Install Python wheel. 
      pip:
        virtualenv: /opt/jupyterhub
        virtualenv_command: /usr/bin/python3 -m venv
        name:
          - wheel 

    - name: Install JupyterHub.
      pip:
        virtualenv: /opt/jupyterhub
        virtualenv_command: /usr/bin/python3 -m venv
        name:
          - jupyterhub 
          - dockerspawner

    - name: Install JS components.
      npm:
        name: configurable-http-proxy
        global: yes

    - name: Create the JupyterHub configuration
      file:
        path: /opt/jupyterhub/etc/jupyterhub
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Create default JupyterHub configuration 
      shell: /opt/jupyterhub/bin/jupyterhub --generate-config 
      args:
        chdir: /opt/jupyterhub/etc/jupyterhub
        creates: /opt/jupyterhub/etc/jupyterhub/jupyterhub_config.py        

    - name: Set JupyterLab to the default interface
      lineinfile:
        path: /opt/jupyterhub/etc/jupyterhub/jupyterhub_config.py
        regexp: 'c.Spawner.default_url'
        line: c.Spawner.default_url = '/lab' 

    - name: Set JupyterLab URL
      lineinfile:
        path: /opt/jupyterhub/etc/jupyterhub/jupyterhub_config.py
        regexp: 'c.JupyterHub.bind_url'
        line: c.JupyterHub.bind_url = 'http://localhost:8000/'

    - name: Configure Docker Spawner
      blockinfile:
        path: /opt/jupyterhub/etc/jupyterhub/jupyterhub_config.py
        block: |
          c.JupyterHub.spawner_class = 'dockerspawner.SystemUserSpawner'
          c.DockerSpawner.container_image = 'mikematera/jupyter-p4e:test2'
          c.DockerSpawner.extra_host_config = {'mem_limit': '1g'}
          c.DockerSpawner.remove = True
          c.JupyterHub.proxy_api_ip = '0.0.0.0'
          c.JupyterHub.hub_ip = '0.0.0.0'
          c.SystemUserSpawner.start_timeout = 240 

          # Get the Docker interface IP address. HACK!
          import subprocess
          import re
          output = subprocess.check_output('/usr/sbin/ip addr show docker0', shell=True, encoding='utf-8')
          got = re.search(r'inet\s(\S+)/16', output)
          c.DockerSpawner.hub_ip_connect = got.group(1)

    - name: Create the JupyterHub service 
      file:
        path: /opt/jupyterhub/etc/systemd
        state: directory
        owner: root
        group: ubuntu
        mode: '0775'

    - name: Write JupyterHub serivce file. 
      blockinfile:
        owner: root
        group: ubuntu
        path: /opt/jupyterhub/etc/systemd/jupyterhub.service
        create: yes
        block: |
          [Unit]
          Description=JupyterHub
          After=syslog.target network.target

          [Service]
          User=root
          Environment="PATH=/opt/jupyterhub/bin:/snap/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin"
          ExecStart=/opt/jupyterhub/bin/jupyterhub -f /opt/jupyterhub/etc/jupyterhub/jupyterhub_config.py

          [Install]
          WantedBy=multi-user.target

    - name: Install JupyterHub service. 
      file: 
        src: /opt/jupyterhub/etc/systemd/jupyterhub.service 
        dest: /etc/systemd/system/jupyterhub.service
        owner: root
        group: root
        state: link

    - name: Reload systemd config
      systemd:
        daemon_reload: yes

    - name: Make sure docker is started.
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Enable and start JupyterHub
      systemd:
        name: jupyterhub
        enabled: yes
        state: started

    - name: Allow HTTP
      ufw:
        rule: allow
        port: '80'
        proto: tcp
            
    - name: Allow HTTPs
      become: yes
      ufw:
        rule: allow
        port: '443'
        proto: tcp

    - name: Allow connections to containers.
      ufw:
        rule: allow
        interface: docker0
        direction: in
