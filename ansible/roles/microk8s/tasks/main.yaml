# 
# Deploy kubernetes in microk8s. 
#
# This must be done first because it provides DNS and because
# credentials are created here that get passed to admins on 
# opus. 
#

- name: Install microk8s by snap
  become: yes
  snap:
    classic: yes
    name:
      - microk8s

- name: Add the user ubuntu to microk8s
  become: yes
  user:
    name: ubuntu
    groups: microk8s
    append: yes

- name: Reset SSH to allow ubuntu int microk8s group.
  meta: reset_connection

- name: Check if microk8s is running.
  shell: /snap/bin/microk8s status | grep -q "is not running" 
  register: microk8s_running
  ignore_errors: True 
  changed_when: False 
  
- name: Start microk8s
  shell: /snap/bin/microk8s start 
  when: microk8s_running.rc == 0

- name: Enable helm3 package manager.
  shell: |
    /snap/bin/microk8s status | grep -q "helm3: disabled" 
  register: microk8s_helm3
  ignore_errors: True 
  changed_when: False 
  
- name: Enable Helm v3
  shell: /snap/bin/microk8s enable helm3 
  when: microk8s_helm3.rc == 0

- name: Allow traffic from micro8s cni0 interface
  become: yes
  ufw:
    rule: allow
    interface: cni0
    direction: in
  
- name: Allow traffic from micro8s cni0 interface
  become: yes
  ufw:
    rule: allow
    interface: cni0
    direction: out

- name: Allow traffic from the server network.
  become: yes
  ufw:
    rule: allow
    src: 172.30.5.0/24

- name: Allow forwarding
  become: yes
  ufw:
    rule: allow
    route: yes

- name: Get micro8s configuration file. 
  delegate_to: '{{ inventory_hostname }}'
  raw: '/snap/bin/microk8s config'
  register: micro8s_secret
  changed_when: False

- name: Save the kubectl config file locally. 
  local_action: copy content={{ micro8s_secret.stdout }} dest=roles/admins/secrets/kube-config-{{ inventory_hostname }}
